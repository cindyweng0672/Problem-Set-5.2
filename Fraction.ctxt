#BlueJ class context
comment0.target=Fraction
comment0.text=\n\ Write\ a\ description\ of\ class\ Fraction\ here.\n\n\ @Cindy\ Weng\n\ @version\ 1.0\n
comment1.params=
comment1.target=Fraction()
comment1.text=\n\ default\ constructor\n\ the\ default\ value\ a\ random\ fraction\ with\ numerator\ and\ denominator\ less\ than\ 20\n
comment10.params=n
comment10.target=void\ setNum(int)
comment10.text=\n\ change\ the\ numerator\ outside\ the\ class\n\ @param\ the\ new\ numerator\ \n
comment11.params=d
comment11.target=void\ setDenom(int)
comment11.text=\n\ change\ the\ denominator\ outside\ the\ class\n\ @param\ the\ new\ denominator\ \n
comment12.params=n1\ n2
comment12.target=Fraction\ multiply(Fraction,\ Fraction)
comment12.text=\n\ multiply\ two\ fractions\ together\ \n\ @param\ n1\ the\ multiplicand\ \n\ @param\ n2\ the\ multiplier\ \n\ @return\ return\ the\ product\ \n
comment13.params=n1\ n2
comment13.target=Fraction\ divide(Fraction,\ Fraction)
comment13.text=\n\ divide\ two\ fractions\n\ @param\ n1\ the\ dividend\ \n\ @param\ n2\ the\ divisor\ \n\ @return\ return\ the\ quotient\ \n
comment14.params=n1\ n2
comment14.target=Fraction\ add(Fraction,\ Fraction)
comment14.text=\n\ add\ two\ fractions\ together\ \n\ @param\ n1\ the\ first\ fraction\ to\ be\ added\ \n\ @param\ n2\ the\ second\ fraction\ to\ be\ added\n\ @return\ return\ the\ sum\n
comment15.params=n
comment15.target=Fraction\ add(Fraction)
comment15.text=\n\ add\ one\ fraction\ onto\ another\ \n\ @param\ n\ the\ fraction\ to\ be\ added\ onto\ the\ instance\ calling\ the\ method\n\ @return\ return\ the\ sum\n
comment16.params=n1\ n2
comment16.target=Fraction\ subtraction(Fraction,\ Fraction)
comment16.text=\n\ subtract\ two\ fractions\ \n\ @param\ n1\ the\ minuend\ \n\ @param\ n2\ the\ subtrahend\ \n\ @return\ return\ the\ difference\ \n
comment17.params=n
comment17.target=void\ is0(int)
comment17.text=\n\ check\ if\ the\ number\ is\ 0\n\ @param\ n\ the\ number\ to\ be\ checked\ \n\ @throws\ an\ exception\ if\ the\ number\ is\ 0\ \n
comment18.params=n\ d
comment18.target=int\ GCF(int,\ int)
comment18.text=\ \n\ find\ the\ GCF\ of\ two\ numbers\ \n\ @param\ n\ the\ first\ number\ in\ the\ operation\ \n\ @param\ d\ the\ second\ number\ in\ the\ operation\ \n\ @return\ return\ the\ GCF\n
comment19.params=f
comment19.target=boolean\ equals(Fraction)
comment19.text=\n\ Returns\ true\ if\ Fraction\ f\ is\ identical\ to\ this\ fraction.\ It\ does\ not\ take\ into\n\ account\ if\ two\ fractions\ are\ equal\ in\ value,\ just\ if\ the\ numerators\ and\n\ denominators\ are\ the\ same.\n\ \ \ \n\ @param\ f\ \ \ \ \ \ The\ fraction\ to\ compare\ with\n\ @return\ \ \ \ A\ boolean\ value\ that\ represents\ whether\ f\ was\ equal\ to\ this\ Fraction\n
comment2.params=n\ d
comment2.target=Fraction(int,\ int)
comment2.text=\n\ A\ contructor\ taking\ the\ numerator\ and\ the\ denominator\ as\ seperate\ integers\n\ @param\ n\ the\ numerator\ of\ the\ Fraction\ object\ \n\ @param\ d\ the\ denominator\ of\ the\ Fraction\ object\n\ Postcondition\:\ the\ denominator\ cannot\ be\ 0\n
comment3.params=fraction
comment3.target=Fraction(java.lang.String)
comment3.text=\n\ A\ contructor\ taking\ the\ fraction\ as\ a\ string\ with\ the\ numerator\ and\ the\ denominator\ sepreated\ by\ a\ "/"\n\ @param\ fraction\ a\ string\ that\ takes\ a\ fraction\ in\ the\ format\ of\ a\ string\ with\ the\ numerator\ and\ the\ denominator\ sepreated\ by\ a\ "/"\n\ @throws\ number\ format\ exception\ if\ the\ string\ is\ entered\ in\ a\ wrong\ format\ \n\ Postcondition\:\ the\ denominator\ cannot\ be\ 0\n
comment4.params=f
comment4.target=Fraction(Fraction)
comment4.text=\n\ A\ constructor\ that\ copy\ a\ Fraction\ object's\ values\n\ @param\ f\ a\ Fraction\ object\ that\ is\ copied\n
comment5.params=
comment5.target=int\ getNum()
comment5.text=\n\ get\ the\ numerator\ of\ a\ Fraction\ objct\ \n\ @return\ return\ the\ numerator\ of\ the\ Fraction\n
comment6.params=
comment6.target=int\ getDenom()
comment6.text=\n\ get\ the\ denominator\ of\ a\ Fraction\ object\ \n\ @return\ return\ the\ denominator\ of\ the\ Fraction\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ put\ the\ numerator\ and\ the\ denominator\ into\ a\ string\ in\ the\ forat\ of\ a\ fraction\n\ @return\ return\ the\ Fraction\ as\ a\ String\ with\ numerator\ and\ denominator\ written\ in\ the\ normal\ form\n
comment8.params=
comment8.target=double\ toDouble()
comment8.text=\n\ turn\ the\ Fraction\ into\ a\ decimal\ number\n\ @return\ return\ the\ fraction\ in\ a\ decimal\ \n
comment9.params=
comment9.target=void\ reduce()
comment9.text=\n\ reduce\ the\ fraction\ to\ the\ lowest\ term\ \n
numComments=20
